import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense
from tensorflow.keras.preprocessing.image import ImageDataGenerator

# Data generator with minimal augmentation for training and testing datasets
train_datagen = ImageDataGenerator(rescale=1.0/255.0)
train_generator = train_datagen.flow_from_directory(
    'dataset/train', target_size=(24, 24), color_mode='grayscale', class_mode='binary')
test_generator = train_datagen.flow_from_directory(
    'dataset/test', target_size=(24, 24), color_mode='grayscale', class_mode='binary')

# Simplified CNN model
model = Sequential([
    Conv2D(16, (3, 3), activation='relu', input_shape=(24, 24, 1)),
    MaxPooling2D(2, 2),
    Flatten(),
    Dense(32, activation='relu'),
    Dense(1, activation='sigmoid')  # Output layer with sigmoid for binary classification
])

# Compile and train the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
model.fit(train_generator, epochs=3, validation_data=test_generator)

# Save the trained model
model.save('eye_state_model.h5')